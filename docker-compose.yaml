version: "3"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    networks:
      - easyflight-network
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - easyflight-network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  api-service:
    image: raedmajeed/api-service:2
    container_name: api-service
    depends_on:
      - airline-service
      - booking-service
      - notification-service
      - frontend-service
    ports:
      - "8080:80"
    networks:
      - easyflight-network
    restart: always

  airline-service:
    image: raedmajeed/airline-service:4
    container_name: airline-service
    ports:
      - "6061:6061"
    depends_on:
      - mysql
      - redis-service
      - broker
    restart: always
    networks:
      - easyflight-network

  booking-service:
    image: raedmajeed/booking-service:4
    container_name: booking-service
    ports:
      - "9091:9091"
    restart: always
    networks:
      - easyflight-network
    depends_on:
      - mysql
      - redis-service
      - broker

  frontend-service:
    image: raedmajeed/frontend-service:2
    container_name: frontend-service
    ports:
      - "3030:3030"
    networks:
      - easyflight-network
    restart: always

  notification-service:
    image: raedmajeed/notification-service:2
    container_name: notification-service
    depends_on:
      - broker
    networks:
      - easyflight-network

  mysql:
    image: mysql:latest
    platform: linux/arm64
    container_name: mysql
    networks:
      - easyflight-network
    environment:
      MYSQL_ROOT_PASSWORD: 12345
      MYSQL_PASSWORD: 1234
      MYSQL_USER: raed
      MYSQL_DATABASE: "flight_booking_booking"
      MYSQL_DATABASE_1: "flight_booking_airline"
    ports:
      - "3307:3306"
    volumes:
      - easyflight-volume:/var/lib/mysql

  redis-service:
    image: redis
    container_name: redis-service
    ports:
      - "6379:6379"
    networks:
      - easyflight-network

volumes:
  easyflight-volume:

networks:
  easyflight-network:
    driver: bridge