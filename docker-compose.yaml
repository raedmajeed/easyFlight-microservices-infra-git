version: "3"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  api-service:
    image: raedmajeed/api-service:3
    container_name: api-service
    depends_on:
      - airline-service
      - booking-service
      - notification-service
      - frontend-service
    ports:
      - "8083:8080"
    restart: always

  airline-service:
    image: raedmajeed/airline-service:12
    container_name: airline-service
    ports:
      - "6061:6061"
    depends_on:
      - mysql
      - redis-service
#      - broker
    restart: always
    environment:
      ADMINPORT: 6060
      ADMINBOOKINGPORT: 9095
      KAFKABROKER: localhost:9092
      DBPORT: 3306
      DBNAME: flight_booking_airline
      DBUSER: admin
      DBPASSWORD: 12345678
      DBHOST: flight-booking-airline.c9uw0oi28nu9.us-east-1.rds.amazonaws.com
      REDISHOST: redis-service:6379
      SECRETKEY: "secret-key"
      BUSINESSSURGE: 1.9

  booking-service:
    image: raedmajeed/booking-service:12
    container_name: booking-service
    ports:
      - "9091:9091"
    restart: always
    environment:
      PORT: 9090
      BSERVICEPORT: 9091
      ADMINBOOKINGPORT: "airline-service:9095"
      DBPORT: 3306
      DBNAME: flight_booking_booking
      DBUSER: admin
      DBPASSWORD: 12345678
      DBHOST: flight-booking-airline.c9uw0oi28nu9.us-east-1.rds.amazonaws.com
      REDISHOST: redis-service:6379
      SECRETKEY: "secret-key"
      SERVICETOKEN: VA2b78db376a44009f23efc9b5f786f629
      SID: ACeed503561915995469a10fd7a8d54c47
      TOKEN: 649aac0165591a99b792b8e445d24fc4
      RAZORPAYKEYID: rzp_test_3Zm0sCFZcVmktU
      RAZORPAYSECRETKEY: WrjpGGCVJ24oYzKfj12tHftK
    depends_on:
      - mysql
      - redis-service
#      - broker

  frontend-service:
    image: raedmajeed/frontend-service:3
    container_name: frontend-service
    ports:
      - "3030:3030"
    restart: always

  notification-service:
    image: raedmajeed/notification-service:5
    container_name: notification-service
#    depends_on:
#      - broker
    environment:
      EMAIL: raedam786@gmail.com
      PASSWORD: gtuemqhhzagxvjrh
      KAFKABROKER: localhost:9092
      PORT: 8082

  mysql:
    image: mysql:8
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 12345
      MYSQL_PASSWORD: 1234
      MYSQL_USER: raed
      MYSQL_DATABASE: "flight_booking_booking"
    ports:
      - "3306:3306"
    volumes:
      - easyflight-volume:/var/lib/mysql

  redis-service:
    image: redis
    container_name: redis-service
    ports:
      - "6379:6379"



volumes:
  easyflight-volume:
